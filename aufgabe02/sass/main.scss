@import "compass/reset";
@import "compass/css3";
/* variablen */

    /*Farben*/

$errorColor: #d9534f;
$warningColor: #f0ad4e;
$successColor: #5cb85c;

    /*Geometrie*/

$marginDimension:10px 5px 10px 5px;
$padding: 5px;

    /*Transitions*/

$transitionDuration:250ms;
$transitionDelay:0;
$transitionProperty:width;
$transTimFunc:linear;

/* mixins */

@mixin beforeAfter
{
    content: "";
    display: block;
}
@mixin strengthIndicator_before($width,$background-color)
{
    width:$width;
    background-color:$background-color;
}
@mixin passwordArea($width,$float)
{
    width:$width;
    float:$float;
}
@mixin inputArea ($border:1px solid #000, $margin:$marginDimension)
{
    border:$border;
    margin:$margin;
}

/* scss klassen */

body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    font-family:'Open Sans', sans-serif;
}

#main {
    width: 990px;
    margin:0 auto;
}
input {
    &[type="text"],&[type="password"]
    {
    @include inputArea;
    padding:$padding;
    width: 180px;
    }
    &[type="submit"] {
    @include inputArea;
    border-radius:0;
    background-color:#fafafa;
    cursor:pointer;
    }

}
label {
    margin-left:5px;
}

.passwordField {
    @include passwordArea(300px,left);
}

.passwordFeedback {
    @include passwordArea(250px,left);
}

.feedback {
    margin:$marginDimension;
    font-size:11px;
    font-weight:600;

    &.error {
    color:$errorColor;
    }

    &.warning {
    color:$warningColor;
    }

    &.success {
    color:$successColor;
    }
    &.error,&.warning,&.success {
    display: none;
    }
}

.strengthIndicator {
    @include inputArea($border:1px solid #d3d3d3);
    width: 200px;
    padding:$padding;
    height: 13px;
    ::before {
    @include beforeAfter;
    height: 100%;

    -moz-transition-property:$transitionProperty;
    -o-transition-property:$transitionProperty;
    -webkit-transition-property:$transitionProperty;
    transition-property:$transitionProperty;

    -moz-transition-delay:$transitionDelay;
    -o-transition-delay:$transitionDelay;
    -webkit-transition-delay:$transitionDelay;
    transition-delay:$transitionDelay;

    -moz-transition-duration:$transitionDuration;
    -o-transition-duration:$transitionDuration;
    -webkit-transition-duration:$transitionDuration;
    transition-duration:$transitionDuration;

    -moz-transition-timing-function:$transTimFunc;
    -o-transition-timing-function:$transTimFunc;
    -webkit-transition-timing-function:$transTimFunc;
    transition-timing-function:$transTimFunc;
}

}

.passwordWrapper::after
{
    @include beforeAfter;
    clear: both;
    float: none;
}

.error .strengthIndicator::before {
    @include strengthIndicator_before(10%,$errorColor);
}

.warning .strengthIndicator::before {
    @include strengthIndicator_before(60%,$warningColor);
}

.success .strengthIndicator::before {
     @include strengthIndicator_before(100%,$successColor);
}
.warning .feedback.warning, .error .feedback.error, .success .feedback.success {
    display: block;
}
